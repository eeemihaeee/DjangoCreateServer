from django.shortcuts import render,redirect
from .models import Post
from .forms import PostForm, RegisterForm, LoginForm
# Create your views here.
from django.http import HttpResponse
from django.urls import reverse_lazy
from django.views.generic.edit import FormView
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth import login, authenticate, logout
from django.contrib.auth.models import User
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django import forms

def home(request):
  posts = Post.objects.all()
  context = {'posts': posts}
  return render(request, 'home.html', context)
#Создание постов  
@login_required  
def create_post(request):
  if request.method == 'GET':
      context = {'form':PostForm()}
      return render(request, 'create_post.html',context)
#Удаление постов
@login_required
def delete_post(request, post_id):
  post = Post.objects.get(id=post_id)
  context = {'post':post}
  if request.method == 'POST':
#Редактирование постов
@login_required

#Создание постов



class RegisterView(FormView):
  template_name = 'register.html'
  form_class = RegisterForm
  redirect_authenticated_user = True
  success_url = reverse_lazy('tasks')
  #Проверка валидности
  def form_valid(self, form):
    user = form.save()
    if user:
      login(self.request, user)

    return super(RegisterView, self).form_valid(form)
#Авторизация    
def sign_in(request):
    if request.method =="GET":
        if request.user.is_authenticated:
          return redirect("myapp")
        form = LoginForm()
        return render(request,'login.html',{'form':form})
    elif request.method == "POST":
        form = LoginForm(request.POST)
        if form.is_valid():
            username = form.cleaned_data['username']
            password = form.cleaned_data['password']
            user = authenticate(request,username=username, password=password)
            if user:
                login(request, user)
                messages.success(request,f' {username.title()} Welcome back!')
                return redirect('posts')
        return render(request, 'login.html', {'form': form})
#Выход
def sign_out(request):
    logout(request)
    messages.success(request, "You have been logged out.")
    return redirect('login')
  